SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\DOCUMENTS\Raphael\casio\code\SDK\projects\MessageFX\Test.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          Test.c     1    /*****************************************************************/
          Test.c     2    /*                                                               */
          Test.c     3    /*   CASIO fx-9860G SDK Library                                  */
          Test.c     4    /*                                                               */
          Test.c     5    /*   File name : Test.c                                          */
          Test.c     6    /*                                                               */
          Test.c     7    /*   Copyright (c) 2006 CASIO COMPUTER CO., LTD.                 */
          Test.c     8    /*                                                               */
          Test.c     9    /*****************************************************************/
          Test.c    10    #include "D:\CASIO\casio\OS\FX\include\fxlib.h"
          Test.c    11    #include <stdio.h>
          Test.c    12    #include <string.h>
          Test.c    13    #include "D:\DOCUMENTS\Raphael\casio\code\SDK\projects\MessageFX\syscall.h"
          Test.c    14    
          Test.c    15    //****************************************************************************
          Test.c    16    //  AddIn_main (Sample program main function)
          Test.c    17    //
          Test.c    18    //  param   :   isAppli   : 1 = This application is launched by MAIN MENU.
          Test.c    19    //                        : 0 = This application is launched by a strip in eACT application.
          Test.c    20    //
          Test.c    21    //              OptionNum : Strip number (0~3)
          Test.c    22    //                         (This parameter is only used when isAppli parameter is 0.)
          Test.c    23    //
          Test.c    24    //  retval  :   1 = No error / 0 = Error
          Test.c    25    //
          Test.c    26    //****************************************************************************
          Test.c    27    
          Test.c    28    
          Test.c    29    
          Test.c    30    char DeviceName[1024];
          Test.c    31    char Msg[1024] = "No New messages";
          Test.c    32    int isLowercase = 0;
          Test.c    33    
          Test.c    34    void main() {
P   00000000              _main:                           ; function: main
                                                           ; frame size=5476
                                                           ; used runtime library name:
                                                           ; __slow_mvn, __quick_strcpy, __slow_strcpy, __slow_strcmp1
    00000000 2FE6                   MOV.L       R14,@-R15
    00000002 2FD6                   MOV.L       R13,@-R15
    00000004 2FC6                   MOV.L       R12,@-R15
    00000006 2FB6                   MOV.L       R11,@-R15
    00000008 2FA6                   MOV.L       R10,@-R15
          Test.c    35        int key;
          Test.c    36        int IsExam = 0;
          Test.c    37        int MsgLength = 3;
    0000000A EB03                   MOV         #3,R11
          Test.c    38        char MsgBuffer[256];
          Test.c    39        char ReservedBuffer[1024];
          Test.c    40        short* recSize;
          Test.c    41        char msg[] = "Bt name :";
    0000000C 913D                   MOV.W       L514+6,R1  ; H'102C
    0000000E 2F96                   MOV.L       R9,@-R15
    00000010 2F86                   MOV.L       R8,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000012 4F22                   STS.L       PR,@-R15
    00000014 9036                   MOV.W       L514,R0    ; H'EAC8
    00000016 3F0C                   ADD         R0,R15
    00000018 D81E                   MOV.L       L514+16,R8 ; _Sleep
    0000001A 31FC                   ADD         R15,R1
    0000001C D221                   MOV.L       L514+32,R2 ; L389
    0000001E 9932                   MOV.W       L514+2,R9  ; H'0400
    00000020 DA1D                   MOV.L       L514+20,R10; _strlen
    00000022 9C31                   MOV.W       L514+4,R12 ; H'1438
    00000024 DD1D                   MOV.L       L514+24,R13; _Print
    00000026 3CFC                   ADD         R15,R12
    00000028 DE1D                   MOV.L       L514+28,R14; _locate
    0000002A D31F                   MOV.L       L514+36,R3 ; __slow_mvn
    0000002C 430B                   JSR         @R3
    0000002E E00A                   MOV         #10,R0
          Test.c    42        char res[2062];
          Test.c    43        int Nber = 1;
          Test.c    44        char *Name = &DeviceName;
    00000030 D11E                   MOV.L       L514+40,R1 ; _DeviceName
          Test.c    45        short *recSize2;
          Test.c    46        int CountExcess = 0;
    00000032 E300                   MOV         #0,R3
    00000034 1F11                   MOV.L       R1,@(4,R15)
          Test.c    47    
          Test.c    48        unsigned char *iresult;
          Test.c    49    
          Test.c    50        Bdisp_AllClr_VRAM();
    00000036 D11E                   MOV.L       L514+44,R1 ; _Bdisp_AllClr_VRAM
    00000038 410B                   JSR         @R1
    0000003A 1F32                   MOV.L       R3,@(8,R15)
          Test.c    51        GetFKeyIconPointer(0x022D, &iresult);
    0000003C 9426                   MOV.W       L514+8,R4  ; H'022D
    0000003E 65F3                   MOV         R15,R5
    00000040 D31C                   MOV.L       L514+48,R3 ; _GetFKeyIconPointer
    00000042 430B                   JSR         @R3
    00000044 750C                   ADD         #12,R5
          Test.c    52        DisplayFKeyIcon(5, iresult);
    00000046 55F3                   MOV.L       @(12,R15),R5
    00000048 D31B                   MOV.L       L514+52,R3 ; _DisplayFKeyIcon
    0000004A 430B                   JSR         @R3
    0000004C E405                   MOV         #5,R4
          Test.c    53    
          Test.c    54        GetFKeyIconPointer(1060, &iresult);
    0000004E 65F3                   MOV         R15,R5
    00000050 941D                   MOV.W       L514+10,R4 ; H'0424
    00000052 D218                   MOV.L       L514+48,R2 ; _GetFKeyIconPointer
    00000054 420B                   JSR         @R2
    00000056 750C                   ADD         #12,R5
          Test.c    55        DisplayFKeyIcon(1, iresult);
    00000058 55F3                   MOV.L       @(12,R15),R5
    0000005A D317                   MOV.L       L514+52,R3 ; _DisplayFKeyIcon
    0000005C 430B                   JSR         @R3
    0000005E E401                   MOV         #1,R4
          Test.c    56    
          Test.c    57        GetFKeyIconPointer(0x022C, &iresult);
    00000060 9416                   MOV.W       L514+12,R4 ; H'022C
    00000062 65F3                   MOV         R15,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000064 D213                   MOV.L       L514+48,R2 ; _GetFKeyIconPointer
    00000066 420B                   JSR         @R2
    00000068 750C                   ADD         #12,R5
          Test.c    58        DisplayFKeyIcon(0, iresult);
    0000006A 55F3                   MOV.L       @(12,R15),R5
    0000006C D312                   MOV.L       L514+52,R3 ; _DisplayFKeyIcon
    0000006E 430B                   JSR         @R3
    00000070 E400                   MOV         #0,R4
          Test.c    59    
          Test.c    60        Serial_ClearTransmitBuffer();
    00000072 D212                   MOV.L       L514+56,R2 ; _Serial_ClearTransmitBuffer
    00000074 420B                   JSR         @R2
    00000076 0009                   NOP
          Test.c    61        Serial_WriteBytes("&GetName&", 10);     //send signal to the ESP32 to create BT AP
    00000078 D411                   MOV.L       L514+60,R4 ; L396
    0000007A D312                   MOV.L       L514+64,R3 ; _Serial_WriteBytes
    0000007C 430B                   JSR         @R3
    0000007E E50A                   MOV         #10,R5
          Test.c    62        while(Serial_ReadBytes(Name, 1024, recSize2) == 1){     //waiting for a response
    00000080 A02B                   BRA         L473
    00000082 0009                   NOP
    00000084              L514:                             
    00000084 EAC8                   .DATA.W     H'EAC8
    00000086 0400                   .DATA.W     H'0400
    00000088 1438                   .DATA.W     H'1438
    0000008A 102C                   .DATA.W     H'102C
    0000008C 022D                   .DATA.W     H'022D
    0000008E 0424                   .DATA.W     H'0424
    00000090 022C                   .DATA.W     H'022C
    00000092 0000                   .DATA.W     0
    00000094 <00000000>             .DATA.L     _Sleep
    00000098 <00000000>             .DATA.L     _strlen
    0000009C <00000000>             .DATA.L     _Print
    000000A0 <00000000>             .DATA.L     _locate
    000000A4 <00000000>             .DATA.L     L389
    000000A8 <00000000>             .DATA.L     __slow_mvn
    000000AC <00000000>             .DATA.L     _DeviceName
    000000B0 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    000000B4 <00000000>             .DATA.L     _GetFKeyIconPointer
    000000B8 <00000000>             .DATA.L     _DisplayFKeyIcon
    000000BC <00000000>             .DATA.L     _Serial_ClearTransmitBuffer
    000000C0 <00000000>             .DATA.L     L396
    000000C4 <00000000>             .DATA.L     _Serial_WriteBytes
    000000C8              L474:                             
          Test.c    63            CountExcess++;
    000000C8 53F2                   MOV.L       @(8,R15),R3
          Test.c    64            if(CountExcess >= 5){                               //TimeOut
    000000CA E205                   MOV         #5,R2
    000000CC 7301                   ADD         #1,R3
    000000CE 3323                   CMP/GE      R2,R3
    000000D0 8D0A                   BT/S        L476
    000000D2 1F32                   MOV.L       R3,@(8,R15)
          Test.c    65                break;
          Test.c    66            }
          Test.c    67            Sleep(1000);
    000000D4 947F                   MOV.W       L515,R4    ; H'03E8
    000000D6 480B                   JSR         @R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000D8 0009                   NOP
    000000DA              L473:                             
    000000DA 66F3                   MOV         R15,R6
    000000DC D342                   MOV.L       L515+18,R3 ; _Serial_ReadBytes
    000000DE 6593                   MOV         R9,R5
    000000E0 430B                   JSR         @R3
    000000E2 54F1                   MOV.L       @(4,R15),R4
    000000E4 8801                   CMP/EQ      #1,R0
    000000E6 89EF                   BT          L474
    000000E8              L476:                             
          Test.c    68        }
          Test.c    69        if ((strcmp(Name, "") == 0) || (strcmp(Name, " ") == 0) || (CountExcess >= 5)){
    000000E8 D540                   MOV.L       L515+22,R5 ; L399
    000000EA D341                   MOV.L       L515+26,R3 ; __slow_strcmp1
    000000EC 430B                   JSR         @R3
    000000EE 54F1                   MOV.L       @(4,R15),R4
    000000F0 2008                   TST         R0,R0
    000000F2 8909                   BT          L478
    000000F4 D53F                   MOV.L       L515+30,R5 ; L400
    000000F6 D33E                   MOV.L       L515+26,R3 ; __slow_strcmp1
    000000F8 430B                   JSR         @R3
    000000FA 54F1                   MOV.L       @(4,R15),R4
    000000FC 2008                   TST         R0,R0
    000000FE 8903                   BT          L478
    00000100 52F2                   MOV.L       @(8,R15),R2
    00000102 E305                   MOV         #5,R3
    00000104 3233                   CMP/GE      R3,R2
    00000106 8B03                   BF          L477
    00000108              L478:                             
          Test.c    70            strcpy(Name, " ERR");
    00000108 D13B                   MOV.L       L515+34,R1 ; L402
    0000010A D33C                   MOV.L       L515+38,R3 ; __slow_strcpy
    0000010C 430B                   JSR         @R3
    0000010E 50F1                   MOV.L       @(4,R15),R0
    00000110              L477:                             
          Test.c    71        }
          Test.c    72        
          Test.c    73        
          Test.c    74        locate(1,1);
    00000110 E501                   MOV         #1,R5
    00000112 4E0B                   JSR         @R14
    00000114 6453                   MOV         R5,R4
          Test.c    75        sprintf(res, "%s%s", msg, DeviceName);
    00000116 D33A                   MOV.L       L515+42,R3 ; _DeviceName
    00000118 925E                   MOV.W       L515+2,R2  ; H'1030
    0000011A 2F36                   MOV.L       R3,@-R15
    0000011C D139                   MOV.L       L515+46,R1 ; L403
    0000011E 32FC                   ADD         R15,R2
    00000120 945B                   MOV.W       L515+4,R4  ; H'0828
    00000122 2F26                   MOV.L       R2,@-R15
    00000124 2F16                   MOV.L       R1,@-R15
    00000126 D238                   MOV.L       L515+50,R2 ; _sprintf
    00000128 420B                   JSR         @R2
    0000012A 34FC                   ADD         R15,R4
          Test.c    76        Print(res);
    0000012C 9456                   MOV.W       L515+6,R4  ; H'081C
    0000012E 7F0C                   ADD         #12,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000130 4D0B                   JSR         @R13
    00000132 34FC                   ADD         R15,R4
          Test.c    77        locate(1,4);
    00000134 E504                   MOV         #4,R5
    00000136 4E0B                   JSR         @R14
    00000138 E401                   MOV         #1,R4
          Test.c    78        Print("->");
    0000013A D434                   MOV.L       L515+54,R4 ; L404
    0000013C 4D0B                   JSR         @R13
    0000013E 0009                   NOP
          Test.c    79        Cursor_SetFlashOn(1);
    00000140 D333                   MOV.L       L515+58,R3 ; _Cursor_SetFlashOn
    00000142 430B                   JSR         @R3
    00000144 E401                   MOV         #1,R4
    00000146 D233                   MOV.L       L515+62,R2 ; _Msg
    00000148 9349                   MOV.W       L515+8,R3  ; H'0810
    0000014A 1F21                   MOV.L       R2,@(4,R15)
    0000014C 33FC                   ADD         R15,R3
    0000014E 1F35                   MOV.L       R3,@(20,R15)
          Test.c    80    
          Test.c    81    
          Test.c    82        while (1) {
    00000150              L480:                             
          Test.c    83            strcpy(ReservedBuffer, "");
    00000150 D126                   MOV.L       L515+22,R1 ; L399
    00000152 9045                   MOV.W       L515+10,R0 ; H'1038
    00000154 D330                   MOV.L       L515+66,R3 ; __quick_strcpy
    00000156 430B                   JSR         @R3
    00000158 30FC                   ADD         R15,R0
          Test.c    84    
          Test.c    85            if(Serial_ReadBytes(ReservedBuffer, 1024, recSize) == 0){
    0000015A 66F3                   MOV         R15,R6
    0000015C 9440                   MOV.W       L515+10,R4 ; H'1038
    0000015E 6593                   MOV         R9,R5
    00000160 D221                   MOV.L       L515+18,R2 ; _Serial_ReadBytes
    00000162 420B                   JSR         @R2
    00000164 34FC                   ADD         R15,R4
    00000166 2008                   TST         R0,R0
    00000168 8B11                   BF          L481
          Test.c    86                
          Test.c    87                locate(1,7);
    0000016A E507                   MOV         #7,R5
    0000016C 4E0B                   JSR         @R14
    0000016E E401                   MOV         #1,R4
          Test.c    88                Print("Msg receve !   ");
    00000170 D42A                   MOV.L       L515+70,R4 ; L407
    00000172 4D0B                   JSR         @R13
    00000174 0009                   NOP
          Test.c    89                locate(1,6);
    00000176 E506                   MOV         #6,R5
    00000178 4E0B                   JSR         @R14
    0000017A E401                   MOV         #1,R4
          Test.c    90                Print(">>");
    0000017C D428                   MOV.L       L515+74,R4 ; L408
    0000017E 4D0B                   JSR         @R13
    00000180 0009                   NOP
          Test.c    91                Print(ReservedBuffer);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000182 942D                   MOV.W       L515+10,R4 ; H'1038
    00000184 4D0B                   JSR         @R13
    00000186 34FC                   ADD         R15,R4
          Test.c    92                locate(MsgLength,4);
    00000188 E504                   MOV         #4,R5
    0000018A 4E0B                   JSR         @R14
    0000018C 64B3                   MOV         R11,R4
    0000018E              L481:                             
          Test.c    93            }
          Test.c    94    
          Test.c    95            GetKey(&key);
    0000018E D225                   MOV.L       L515+78,R2 ; _GetKey
    00000190 420B                   JSR         @R2
    00000192 64F3                   MOV         R15,R4
          Test.c    96    
          Test.c    97            if (key == KEY_CTRL_EXIT) {
    00000194 9425                   MOV.W       L515+12,R4 ; H'7532
    00000196 63F2                   MOV.L       @R15,R3
    00000198 3340                   CMP/EQ      R4,R3
    0000019A 8B01                   BF          L516
    0000019C A176                   BRA         L510
    0000019E 0009                   NOP
    000001A0              L516:                             
          Test.c    98                //Restart();
          Test.c    99                //TestMode(1);
          Test.c   100                break;
          Test.c   101            }
          Test.c   102            /*if (key == KEY_CTRL_F4) {
          Test.c   103    
          Test.c   104                char buff[12];
          Test.c   105    
          Test.c   106                GetFKeyIconPointer(Nber, &iresult);
          Test.c   107                DisplayFKeyIcon(0, iresult);
          Test.c   108                GetFKeyIconPointer(Nber+1, &iresult);
          Test.c   109                DisplayFKeyIcon(1, iresult);
          Test.c   110                GetFKeyIconPointer(Nber+2, &iresult);
          Test.c   111                DisplayFKeyIcon(2, iresult);
          Test.c   112                GetFKeyIconPointer(Nber+3, &iresult);
          Test.c   113                DisplayFKeyIcon(3, iresult);
          Test.c   114                GetFKeyIconPointer(Nber+4, &iresult);
          Test.c   115                DisplayFKeyIcon(4, iresult);
          Test.c   116                GetFKeyIconPointer(Nber+5, &iresult);
          Test.c   117                DisplayFKeyIcon(5, iresult);
          Test.c   118                Nber+=6;
          Test.c   119                
          Test.c   120                sprintf(buff, "%d", Nber);
          Test.c   121                locate(1,5);
          Test.c   122                Print(buff);
          Test.c   123            }*/
          Test.c   124            if (key == KEY_CTRL_F6) {
    000001A0 9420                   MOV.W       L515+14,R4 ; H'753E
    000001A2 63F2                   MOV.L       @R15,R3
    000001A4 3340                   CMP/EQ      R4,R3
    000001A6 8901                   BT          L517
    000001A8 A089                   BRA         L484
    000001AA 0009                   NOP
    000001AC              L517:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          Test.c   125                
          Test.c   126                char msgg[] = ">>";
    000001AC 911B                   MOV.W       L515+16,R1 ; H'0818
    000001AE 31FC                   ADD         R15,R1
    000001B0 D21D                   MOV.L       L515+82,R2 ; L412
    000001B2 D31E                   MOV.L       L515+86,R3 ; __slow_mvn
    000001B4 430B                   JSR         @R3
    000001B6 E003                   MOV         #3,R0
          Test.c   127                char buffer[2048];
          Test.c   128                char *Name;
          Test.c   129                short * recSize;
          Test.c   130                int CountExcess = 0;
          Test.c   131    
          Test.c   132                memset(Msg, '\0', strlen(Msg));
    000001B8 D416                   MOV.L       L515+62,R4 ; _Msg
    000001BA E100                   MOV         #0,R1
    000001BC 4A0B                   JSR         @R10
    000001BE 1F12                   MOV.L       R1,@(8,R15)
    000001C0 D414                   MOV.L       L515+62,R4 ; _Msg
    000001C2 6603                   MOV         R0,R6
    000001C4 D31A                   MOV.L       L515+90,R3 ; _memset
    000001C6 430B                   JSR         @R3
    000001C8 E500                   MOV         #0,R5
          Test.c   133                Name = &Msg;
          Test.c   134                Serial_WriteBytes("&GetMsg&", 9);     //send signal to the ESP32 to get new messages
    000001CA D41A                   MOV.L       L515+94,R4 ; L417
    000001CC D21A                   MOV.L       L515+98,R2 ; _Serial_WriteBytes
    000001CE 420B                   JSR         @R2
    000001D0 E509                   MOV         #9,R5
          Test.c   135    
          Test.c   136                while(Serial_ReadBytes(Name, 1024, recSize) == 1){     //waiting for a response
    000001D2 A03C                   BRA         L485
    000001D4 0009                   NOP
    000001D6              L515:                             
    000001D6 03E8                   .DATA.W     H'03E8
    000001D8 1030                   .DATA.W     H'1030
    000001DA 0828                   .DATA.W     H'0828
    000001DC 081C                   .DATA.W     H'081C
    000001DE 0810                   .DATA.W     H'0810
    000001E0 1038                   .DATA.W     H'1038
    000001E2 7532                   .DATA.W     H'7532
    000001E4 753E                   .DATA.W     H'753E
    000001E6 0818                   .DATA.W     H'0818
    000001E8 <00000000>             .DATA.L     _Serial_ReadBytes
    000001EC <00000000>             .DATA.L     L399
    000001F0 <00000000>             .DATA.L     __slow_strcmp1
    000001F4 <00000000>             .DATA.L     L400
    000001F8 <00000000>             .DATA.L     L402
    000001FC <00000000>             .DATA.L     __slow_strcpy
    00000200 <00000000>             .DATA.L     _DeviceName
    00000204 <00000000>             .DATA.L     L403
    00000208 <00000000>             .DATA.L     _sprintf
    0000020C <00000000>             .DATA.L     L404
    00000210 <00000000>             .DATA.L     _Cursor_SetFlashOn
    00000214 <00000000>             .DATA.L     _Msg
    00000218 <00000000>             .DATA.L     __quick_strcpy
    0000021C <00000000>             .DATA.L     L407




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000220 <00000000>             .DATA.L     L408
    00000224 <00000000>             .DATA.L     _GetKey
    00000228 <00000000>             .DATA.L     L412
    0000022C <00000000>             .DATA.L     __slow_mvn
    00000230 <00000000>             .DATA.L     _memset
    00000234 <00000000>             .DATA.L     L417
    00000238 <00000000>             .DATA.L     _Serial_WriteBytes
    0000023C              L486:                             
          Test.c   137                    CountExcess++;
    0000023C 52F2                   MOV.L       @(8,R15),R2
          Test.c   138                    if(CountExcess >= 5){                               //TimeOut
    0000023E E305                   MOV         #5,R3
    00000240 7201                   ADD         #1,R2
    00000242 3233                   CMP/GE      R3,R2
    00000244 8D0A                   BT/S        L488
    00000246 1F22                   MOV.L       R2,@(8,R15)
          Test.c   139                        break;
          Test.c   140                    }
          Test.c   141                    Sleep(1000);
    00000248 944F                   MOV.W       L518,R4    ; H'03E8
    0000024A 480B                   JSR         @R8
    0000024C 0009                   NOP
    0000024E              L485:                             
    0000024E 66F3                   MOV         R15,R6
    00000250 D328                   MOV.L       L518+10,R3 ; _Serial_ReadBytes
    00000252 6593                   MOV         R9,R5
    00000254 430B                   JSR         @R3
    00000256 54F1                   MOV.L       @(4,R15),R4
    00000258 8801                   CMP/EQ      #1,R0
    0000025A 89EF                   BT          L486
    0000025C              L488:                             
          Test.c   142                }
          Test.c   143                Serial_ReadBytes(Name, 1024, recSize);
    0000025C D325                   MOV.L       L518+10,R3 ; _Serial_ReadBytes
    0000025E 66F3                   MOV         R15,R6
    00000260 6593                   MOV         R9,R5
    00000262 430B                   JSR         @R3
    00000264 54F1                   MOV.L       @(4,R15),R4
          Test.c   144                Sleep(10);
    00000266 480B                   JSR         @R8
    00000268 E40A                   MOV         #10,R4
          Test.c   145                
          Test.c   146                sprintf(buffer, "%s%s", msgg, Msg);
    0000026A D223                   MOV.L       L518+14,R2 ; _Msg
    0000026C 933E                   MOV.W       L518+2,R3  ; H'081C
    0000026E 2F26                   MOV.L       R2,@-R15
    00000270 D122                   MOV.L       L518+18,R1 ; L403
    00000272 33FC                   ADD         R15,R3
    00000274 2F36                   MOV.L       R3,@-R15
    00000276 2F16                   MOV.L       R1,@-R15
    00000278 D321                   MOV.L       L518+22,R3 ; _sprintf
    0000027A 64F3                   MOV         R15,R4
    0000027C 430B                   JSR         @R3
    0000027E 7424                   ADD         #36,R4
          Test.c   147                if(strcmp(Msg, "&NoNew") == 0){
    00000280 D520                   MOV.L       L518+26,R5 ; L420
    00000282 D41D                   MOV.L       L518+14,R4 ; _Msg




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000284 D220                   MOV.L       L518+30,R2 ; __slow_strcmp1
    00000286 420B                   JSR         @R2
    00000288 7F0C                   ADD         #12,R15
    0000028A 2008                   TST         R0,R0
    0000028C 8B05                   BF          L489
          Test.c   148                    locate(1,7);
    0000028E E507                   MOV         #7,R5
    00000290 4E0B                   JSR         @R14
    00000292 E401                   MOV         #1,R4
          Test.c   149                    Print("No new messages              ");
    00000294 D41D                   MOV.L       L518+34,R4 ; L422
    00000296 A00B                   BRA         L512
    00000298 0009                   NOP
    0000029A              L489:                             
          Test.c   150                    locate(MsgLength,4);
          Test.c   151                }
          Test.c   152                else {
          Test.c   153                    locate(1, 6);
    0000029A E506                   MOV         #6,R5
    0000029C 4E0B                   JSR         @R14
    0000029E E401                   MOV         #1,R4
          Test.c   154                    Print("                             ");
    000002A0 D41B                   MOV.L       L518+38,R4 ; L424
    000002A2 4D0B                   JSR         @R13
    000002A4 0009                   NOP
          Test.c   155                    locate(1, 6);
    000002A6 E506                   MOV         #6,R5
    000002A8 4E0B                   JSR         @R14
    000002AA E401                   MOV         #1,R4
          Test.c   156                    Print(buffer);
    000002AC 64F3                   MOV         R15,R4
    000002AE 7418                   ADD         #24,R4
    000002B0              L512:                             
    000002B0 4D0B                   JSR         @R13
    000002B2 0009                   NOP
          Test.c   157                    locate(MsgLength,4);
    000002B4 E504                   MOV         #4,R5
    000002B6 4E0B                   JSR         @R14
    000002B8 64B3                   MOV         R11,R4
          Test.c   158                }
          Test.c   159    
          Test.c   160                Sleep(15);
    000002BA 480B                   JSR         @R8
    000002BC E40F                   MOV         #15,R4
    000002BE              L484:                             
          Test.c   161            }
          Test.c   162    
          Test.c   163            if (key == KEY_CTRL_F2) {
    000002BE 9416                   MOV.W       L518+4,R4  ; H'753A
    000002C0 62F2                   MOV.L       @R15,R2
    000002C2 3240                   CMP/EQ      R4,R2
    000002C4 8B3A                   BF          L491
    000002C6 D113                   MOV.L       L518+42,R1 ; _isLowercase
    000002C8 6012                   MOV.L       @R1,R0
    000002CA 8801                   CMP/EQ      #1,R0
    000002CC 8F28                   BF/S        L492
    000002CE 6403                   MOV         R0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          Test.c   164    
          Test.c   165                unsigned char* iresult3;
          Test.c   166                if(isLowercase == 1){
          Test.c   167                    GetFKeyIconPointer(1060, &iresult3);
    000002D0 940E                   MOV.W       L518+6,R4  ; H'0424
    000002D2 65F3                   MOV         R15,R5
    000002D4 D210                   MOV.L       L518+46,R2 ; _GetFKeyIconPointer
    000002D6 420B                   JSR         @R2
    000002D8 7510                   ADD         #16,R5
          Test.c   168                    DisplayFKeyIcon(1, iresult3);
    000002DA 55F4                   MOV.L       @(16,R15),R5
    000002DC D30F                   MOV.L       L518+50,R3 ; _DisplayFKeyIcon
    000002DE 430B                   JSR         @R3
    000002E0 E401                   MOV         #1,R4
          Test.c   169                    isLowercase = 0;
    000002E2 E200                   MOV         #0,R2
    000002E4 D30B                   MOV.L       L518+42,R3 ; _isLowercase
    000002E6 A029                   BRA         L491
    000002E8 2322                   MOV.L       R2,@R3
    000002EA              L518:                             
    000002EA 03E8                   .DATA.W     H'03E8
    000002EC 081C                   .DATA.W     H'081C
    000002EE 753A                   .DATA.W     H'753A
    000002F0 0424                   .DATA.W     H'0424
    000002F2 0000                   .DATA.W     0
    000002F4 <00000000>             .DATA.L     _Serial_ReadBytes
    000002F8 <00000000>             .DATA.L     _Msg
    000002FC <00000000>             .DATA.L     L403
    00000300 <00000000>             .DATA.L     _sprintf
    00000304 <00000000>             .DATA.L     L420
    00000308 <00000000>             .DATA.L     __slow_strcmp1
    0000030C <00000000>             .DATA.L     L422
    00000310 <00000000>             .DATA.L     L424
    00000314 <00000000>             .DATA.L     _isLowercase
    00000318 <00000000>             .DATA.L     _GetFKeyIconPointer
    0000031C <00000000>             .DATA.L     _DisplayFKeyIcon
    00000320              L492:                             
          Test.c   170                }else if(isLowercase == 0){
    00000320 2448                   TST         R4,R4
    00000322 8B0B                   BF          L491
          Test.c   171                    
          Test.c   172                    GetFKeyIconPointer(1061, &iresult3);
    00000324 9476                   MOV.W       L519,R4    ; H'0425
    00000326 65F3                   MOV         R15,R5
    00000328 D33D                   MOV.L       L519+12,R3 ; _GetFKeyIconPointer
    0000032A 430B                   JSR         @R3
    0000032C 7510                   ADD         #16,R5
          Test.c   173                    DisplayFKeyIcon(1, iresult3);
    0000032E 55F4                   MOV.L       @(16,R15),R5
    00000330 D33C                   MOV.L       L519+16,R3 ; _DisplayFKeyIcon
    00000332 430B                   JSR         @R3
    00000334 E401                   MOV         #1,R4
          Test.c   174                    isLowercase = 1;
    00000336 E201                   MOV         #1,R2
    00000338 D33B                   MOV.L       L519+20,R3 ; _isLowercase
    0000033A 2322                   MOV.L       R2,@R3
    0000033C              L491:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

          Test.c   175                }
          Test.c   176            }
          Test.c   177    
          Test.c   178            if((key >= 65 && key <= 90) || (key >= 48 && key <= 57) || key == 32){
    0000033C 60F2                   MOV.L       @R15,R0
    0000033E E141                   MOV         #65,R1
    00000340 3013                   CMP/GE      R1,R0
    00000342 8B03                   BF          L497
    00000344 63F2                   MOV.L       @R15,R3
    00000346 E25A                   MOV         #90,R2
    00000348 3327                   CMP/GT      R2,R3
    0000034A 8B0A                   BF          L496
    0000034C              L497:                             
    0000034C 63F2                   MOV.L       @R15,R3
    0000034E E130                   MOV         #48,R1
    00000350 3313                   CMP/GE      R1,R3
    00000352 8B03                   BF          L498
    00000354 62F2                   MOV.L       @R15,R2
    00000356 E339                   MOV         #57,R3
    00000358 3237                   CMP/GT      R3,R2
    0000035A 8B02                   BF          L496
    0000035C              L498:                             
    0000035C 60F2                   MOV.L       @R15,R0
    0000035E 8820                   CMP/EQ      #32,R0
    00000360 8B28                   BF          L495
    00000362              L496:                             
          Test.c   179                
          Test.c   180                unsigned char buffer[12];
          Test.c   181    
          Test.c   182                locate(MsgLength,4);        
    00000362 E504                   MOV         #4,R5
    00000364 4E0B                   JSR         @R14
    00000366 64B3                   MOV         R11,R4
          Test.c   183                if(isLowercase == 0){
    00000368 D32F                   MOV.L       L519+20,R3 ; _isLowercase
    0000036A 6232                   MOV.L       @R3,R2
    0000036C 2228                   TST         R2,R2
    0000036E 890E                   BT          L452
          Test.c   184                    sprintf(buffer, "%c", key);         //If the input is upper case, get the normal input
          Test.c   185                }else if(key >= 65 && key <= 90){
    00000370 61F2                   MOV.L       @R15,R1
    00000372 E241                   MOV         #65,R2
    00000374 3123                   CMP/GE      R2,R1
    00000376 8B0A                   BF          L452
    00000378 60F2                   MOV.L       @R15,R0
    0000037A E15A                   MOV         #90,R1
    0000037C 3017                   CMP/GT      R1,R0
    0000037E 8906                   BT          L452
          Test.c   186                    sprintf(buffer, "%c", (key+32));    //if the input is a number and upper case, get the inp
                         +ut + 32 to be in lower case
    00000380 62F2                   MOV.L       @R15,R2
    00000382 7220                   ADD         #32,R2
    00000384 2F26                   MOV.L       R2,@-R15
    00000386 D329                   MOV.L       L519+24,R3 ; L432
    00000388 2F36                   MOV.L       R3,@-R15
    0000038A A004                   BRA         L513
    0000038C 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000038E              L452:
          Test.c   187                }else{
          Test.c   188                    sprintf(buffer, "%c", key);
    0000038E 62F2                   MOV.L       @R15,R2
    00000390 D326                   MOV.L       L519+24,R3 ; L432
    00000392 2F26                   MOV.L       R2,@-R15
    00000394 2F36                   MOV.L       R3,@-R15
    00000396              L513:                             
    00000396 943E                   MOV.W       L519+2,R4  ; H'0818
    00000398 D225                   MOV.L       L519+28,R2 ; _sprintf
    0000039A 420B                   JSR         @R2
    0000039C 34FC                   ADD         R15,R4
    0000039E 7F08                   ADD         #8,R15
          Test.c   189                }
          Test.c   190                Print(buffer);                 //Print the result
    000003A0 943A                   MOV.W       L519+4,R4  ; H'0810
    000003A2 4D0B                   JSR         @R13
    000003A4 34FC                   ADD         R15,R4
          Test.c   191                strncat(MsgBuffer, &buffer, 1);
    000003A6 E601                   MOV         #1,R6
    000003A8 55F5                   MOV.L       @(20,R15),R5
    000003AA D322                   MOV.L       L519+32,R3 ; _strncat
    000003AC 430B                   JSR         @R3
    000003AE 64C3                   MOV         R12,R4
          Test.c   192                MsgLength++;
    000003B0 A01D                   BRA         L503
    000003B2 7B01                   ADD         #1,R11
    000003B4              L495:                             
          Test.c   193    
          Test.c   194            }
          Test.c   195            else if(key == KEY_CTRL_DEL){
    000003B4 9431                   MOV.W       L519+6,R4  ; H'7549
    000003B6 63F2                   MOV.L       @R15,R3
    000003B8 3340                   CMP/EQ      R4,R3
    000003BA 8B18                   BF          L503
          Test.c   196                if(MsgLength > 3){
    000003BC E103                   MOV         #3,R1
    000003BE 3B17                   CMP/GT      R1,R11
    000003C0 8B15                   BF          L503
          Test.c   197                    MsgLength--;
    000003C2 7BFF                   ADD         #-1,R11
          Test.c   198                    locate(MsgLength,4);
    000003C4 E504                   MOV         #4,R5
    000003C6 4E0B                   JSR         @R14
    000003C8 64B3                   MOV         R11,R4
          Test.c   199                    Print(" ");
    000003CA D41B                   MOV.L       L519+36,R4 ; L400
    000003CC 4D0B                   JSR         @R13
    000003CE 0009                   NOP
          Test.c   200                    strcpy(&MsgBuffer[strlen(MsgBuffer)-1], &MsgBuffer[strlen(MsgBuffer)]);
    000003D0 4A0B                   JSR         @R10
    000003D2 64C3                   MOV         R12,R4
    000003D4 63C3                   MOV         R12,R3
    000003D6 330C                   ADD         R0,R3
    000003D8 2F36                   MOV.L       R3,@-R15
    000003DA 4A0B                   JSR         @R10
    000003DC 64C3                   MOV         R12,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003DE 30CC                   ADD         R12,R0
    000003E0 D216                   MOV.L       L519+40,R2 ; __slow_strcpy
    000003E2 70FF                   ADD         #-1,R0
    000003E4 420B                   JSR         @R2
    000003E6 61F6                   MOV.L       @R15+,R1
          Test.c   201                    locate(MsgLength,4);
    000003E8 E504                   MOV         #4,R5
    000003EA 4E0B                   JSR         @R14
    000003EC 64B3                   MOV         R11,R4
    000003EE              L503:                             
          Test.c   202                }
          Test.c   203            }
          Test.c   204            if(key == KEY_CTRL_EXE || key == KEY_CTRL_F1){
    000003EE 9415                   MOV.W       L519+8,R4  ; H'7534
    000003F0 63F2                   MOV.L       @R15,R3
    000003F2 3340                   CMP/EQ      R4,R3
    000003F4 8905                   BT          L507
    000003F6 9112                   MOV.W       L519+10,R1 ; H'7539
    000003F8 62F2                   MOV.L       @R15,R2
    000003FA 3210                   CMP/EQ      R1,R2
    000003FC 8901                   BT          L520
    000003FE AEA7                   BRA         L480
    00000400 0009                   NOP
    00000402              L520:                             
    00000402              L507:                             
          Test.c   205                if(strlen(MsgBuffer) == 0){
    00000402 4A0B                   JSR         @R10
    00000404 64C3                   MOV         R12,R4
    00000406 2008                   TST         R0,R0
    00000408 8B1C                   BF          L508
          Test.c   206                    DisplayErrorMessage(20);
    0000040A D30D                   MOV.L       L519+44,R3 ; _DisplayErrorMessage
    0000040C 430B                   JSR         @R3
    0000040E E414                   MOV         #20,R4
    00000410 AE9E                   BRA         L480
    00000412 0009                   NOP
    00000414              L519:                             
    00000414 0425                   .DATA.W     H'0425
    00000416 0818                   .DATA.W     H'0818
    00000418 0810                   .DATA.W     H'0810
    0000041A 7549                   .DATA.W     H'7549
    0000041C 7534                   .DATA.W     H'7534
    0000041E 7539                   .DATA.W     H'7539
    00000420 <00000000>             .DATA.L     _GetFKeyIconPointer
    00000424 <00000000>             .DATA.L     _DisplayFKeyIcon
    00000428 <00000000>             .DATA.L     _isLowercase
    0000042C <00000000>             .DATA.L     L432
    00000430 <00000000>             .DATA.L     _sprintf
    00000434 <00000000>             .DATA.L     _strncat
    00000438 <00000000>             .DATA.L     L400
    0000043C <00000000>             .DATA.L     __slow_strcpy
    00000440 <00000000>             .DATA.L     _DisplayErrorMessage
    00000444              L508:                             
          Test.c   207                }else{
          Test.c   208    
          Test.c   209                    int debug;
          Test.c   210                    Serial_ClearTransmitBuffer();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000444 D318                   MOV.L       L521+2,R3  ; _Serial_ClearTransmitBuffer
    00000446 430B                   JSR         @R3
    00000448 0009                   NOP
          Test.c   211                    debug = Serial_WriteBytes(MsgBuffer, strlen(MsgBuffer));
    0000044A 4A0B                   JSR         @R10
    0000044C 64C3                   MOV         R12,R4
    0000044E 6503                   MOV         R0,R5
    00000450 D216                   MOV.L       L521+6,R2  ; _Serial_WriteBytes
    00000452 420B                   JSR         @R2
    00000454 64C3                   MOV         R12,R4
          Test.c   212                    Sleep(10);
    00000456 480B                   JSR         @R8
    00000458 E40A                   MOV         #10,R4
          Test.c   213                    memset(MsgBuffer, '\0', strlen(MsgBuffer));
    0000045A 4A0B                   JSR         @R10
    0000045C 64C3                   MOV         R12,R4
    0000045E 6603                   MOV         R0,R6
    00000460 D313                   MOV.L       L521+10,R3 ; _memset
    00000462 E500                   MOV         #0,R5
    00000464 430B                   JSR         @R3
    00000466 64C3                   MOV         R12,R4
          Test.c   214                    locate(3,4);
    00000468 E504                   MOV         #4,R5
    0000046A 4E0B                   JSR         @R14
    0000046C E403                   MOV         #3,R4
          Test.c   215                    Print("                                      " ); 
    0000046E D411                   MOV.L       L521+14,R4 ; L441
    00000470 4D0B                   JSR         @R13
    00000472 0009                   NOP
          Test.c   216                    MsgLength = 3;
    00000474 EB03                   MOV         #3,R11
          Test.c   217                    locate(1,7);
    00000476 E507                   MOV         #7,R5
    00000478 4E0B                   JSR         @R14
    0000047A E401                   MOV         #1,R4
          Test.c   218                    Print("Msg sent !             " ); 
    0000047C D40E                   MOV.L       L521+18,R4 ; L442
    0000047E 4D0B                   JSR         @R13
    00000480 0009                   NOP
          Test.c   219                    locate(MsgLength,4);
    00000482 E504                   MOV         #4,R5
    00000484 4E0B                   JSR         @R14
    00000486 64B3                   MOV         R11,R4
    00000488 AE62                   BRA         L480
    0000048A 0009                   NOP
    0000048C              L510:                             
          Test.c   220                }
          Test.c   221            }
          Test.c   222        }
          Test.c   223        return;
          Test.c   224    }
    0000048C 910B                   MOV.W       L521,R1    ; H'1538
    0000048E 3F1C                   ADD         R1,R15
    00000490 4F26                   LDS.L       @R15+,PR
    00000492 68F6                   MOV.L       @R15+,R8
    00000494 69F6                   MOV.L       @R15+,R9
    00000496 6AF6                   MOV.L       @R15+,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000498 6BF6                   MOV.L       @R15+,R11
    0000049A 6CF6                   MOV.L       @R15+,R12
    0000049C 6DF6                   MOV.L       @R15+,R13
    0000049E 000B                   RTS
    000004A0 6EF6                   MOV.L       @R15+,R14
          Test.c   225    
          Test.c   226    
          Test.c   227    int AddIn_main(int isAppli, unsigned short OptionNum)
    000004A2              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=0
          Test.c   228    {
          Test.c   229        main();
    000004A2 ADAD                   BRA         _main
    000004A4 0009                   NOP
    000004A6              L521:                             
    000004A6 1538                   .DATA.W     H'1538
    000004A8 <00000000>             .DATA.L     _Serial_ClearTransmitBuffer
    000004AC <00000000>             .DATA.L     _Serial_WriteBytes
    000004B0 <00000000>             .DATA.L     _memset
    000004B4 <00000000>             .DATA.L     L441
    000004B8 <00000000>             .DATA.L     L442
          Test.c   230        
          Test.c   231    }
          Test.c   232    
          Test.c   233    //****************************************************************************
          Test.c   234    //**************                                              ****************
          Test.c   235    //**************                 Notice!                      ****************
          Test.c   236    //**************                                              ****************
          Test.c   237    //**************  Please do not change the following source.  ****************
          Test.c   238    //**************                                              ****************
          Test.c   239    //****************************************************************************
          Test.c   240    
          Test.c   241    
          Test.c   242    #pragma section _BR_Size
          Test.c   243    unsigned long BR_Size;
          Test.c   244    #pragma section
          Test.c   245    
          Test.c   246    
          Test.c   247    #pragma section _TOP
          Test.c   248    
          Test.c   249    //****************************************************************************
          Test.c   250    //  InitializeSystem
          Test.c   251    //
          Test.c   252    //  param   :   isAppli   : 1 = Application / 0 = eActivity
          Test.c   253    //              OptionNum : Option Number (only eActivity)
          Test.c   254    //
          Test.c   255    //  retval  :   1 = No error / 0 = Error
          Test.c   256    //
          Test.c   257    //****************************************************************************
          Test.c   258    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
          Test.c   259    {
          Test.c   260        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L522+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000006              L522:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
          Test.c   261    }
          Test.c   262    
          Test.c   263    #pragma section
D   00000000              _Msg:                            ; static: Msg
    00000000 4E6F204E65             .SDATA      "No New messages"
             77206D6573   
             7361676573   
    0000000F 00                     .DATA.B     H'00
    00000010 000003F001             .DATAB.B    1008,0
             00           
    00000400              _isLowercase:                    ; static: isLowercase
    00000400 00000000               .DATA.L     H'00000000
C   00000000              L389:
    00000000 4274206E61             .SDATA      "Bt name :"
             6D65203A     
    00000009 00                     .DATA.B     H'00
    0000000A 00000002               .RES.W      1
    0000000C              L396:
    0000000C 264765744E             .SDATA      "&GetName&"
             616D6526     
    00000015 00                     .DATA.B     H'00
    00000016 00000002               .RES.W      1
    00000018              L399:
    00000018 00                     .DATA.B     H'00
    00000019 00000001               .RES.B      1
    0000001A 00000002               .RES.W      1
    0000001C              L400:
    0000001C 20                     .SDATA      " "
    0000001D 00                     .DATA.B     H'00
    0000001E 00000002               .RES.W      1
    00000020              L402:
    00000020 20455252               .SDATA      " ERR"
    00000024 00                     .DATA.B     H'00
    00000025 00000001               .RES.B      1
    00000026 00000002               .RES.W      1
    00000028              L403:
    00000028 25732573               .SDATA      "%s%s"
    0000002C 00                     .DATA.B     H'00
    0000002D 00000001               .RES.B      1
    0000002E 00000002               .RES.W      1
    00000030              L404:
    00000030 2D3E                   .SDATA      "->"
    00000032 00                     .DATA.B     H'00
    00000033 00000001               .RES.B      1
    00000034              L407:
    00000034 4D73672072             .SDATA      "Msg receve !   "
             6563657665   
             2021202020   
    00000043 00                     .DATA.B     H'00
    00000044              L408:
    00000044 3E3E                   .SDATA      ">>"
    00000046 00                     .DATA.B     H'00
    00000047              L412:
    00000047 3E3E                   .SDATA      ">>"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000049 00                     .DATA.B     H'00
    0000004A 00000002               .RES.W      1
    0000004C              L417:
    0000004C 264765744D             .SDATA      "&GetMsg&"
             736726       
    00000054 00                     .DATA.B     H'00
    00000055 00000001               .RES.B      1
    00000056 00000002               .RES.W      1
    00000058              L420:
    00000058 264E6F4E65             .SDATA      "&NoNew"
             77           
    0000005E 00                     .DATA.B     H'00
    0000005F 00000001               .RES.B      1
    00000060              L422:
    00000060 4E6F206E65             .SDATA      "No new messages              "
             77206D6573   
             7361676573   
             2020202020   
             2020202020   
             20202020     
    0000007D 00                     .DATA.B     H'00
    0000007E 00000002               .RES.W      1
    00000080              L424:
    00000080 2020202020             .SDATA      "                             "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             20202020     
    0000009D 00                     .DATA.B     H'00
    0000009E 00000002               .RES.W      1
    000000A0              L432:
    000000A0 2563                   .SDATA      "%c"
    000000A2 00                     .DATA.B     H'00
    000000A3 00000001               .RES.B      1
    000000A4              L441:
    000000A4 2020202020             .SDATA      "                                      "
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             2020202020   
             202020       
    000000CA 00                     .DATA.B     H'00
    000000CB 00000001               .RES.B      1
    000000CC              L442:
    000000CC 4D73672073             .SDATA      "Msg sent !             "
             656E742021   
             2020202020   
             2020202020   
             202020       
    000000E3 00                     .DATA.B     H'00
B   00000000              _DeviceName:                     ; static: DeviceName
    00000000 00000400               .RES.B      1024
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 22-Jan-2023 22:08:30  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        30




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:      263



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000004BC Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               000000E4 Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000404 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000400 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00000DB4 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           21
NUMBER OF EXTERNAL DEFINITION SYMBOLS:           7
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:            79






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\rapha\AppData\Local\Temp\hmk632B.tmp 

